import groovy.json.JsonBuilder

import java.text.SimpleDateFormat

plugins {
    id 'java'
}

ext {
    MC_VERSION = '1.14.4'
    MCP_VERSION = '20190829.143755'
    BINPATCH_VERSION = '1.0.5'
    SPEC_VERSION = 1
}

group = 'net.impactclient'
version = MC_VERSION

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
//    mavenLocal()
    maven {
        name = 'mojang'
        url = 'https://libraries.minecraft.net'
    }
    maven {
        name = 'forge'
        url = 'http://files.minecraftforge.net/maven'
    }
    jcenter()
    mavenCentral()
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.11.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.11.2'
    implementation 'com.mojang:authlib:1.5.25'
    implementation 'cpw.mods:modlauncher:3.2.+'
    implementation 'org.apache.commons:commons-lang3:3.9'
}

processResources {
    def resources = sourceSets.main.output.resourcesDir
    resources.mkdirs()

    new File(resources, 'config.json').text = new JsonBuilder([
            // TODO: can we just not list any binpatches?
            //       can we pass something like --help instead of --apply?
            //       can we not a binpatcher archive so it doesn't even download?
            'mcp': "de.oceanlabs.mcp:mcp_config:${MC_VERSION}-${MCP_VERSION}@zip",
            'binpatches': 'joined.lzma', // File generated by giving binarypatcher two identical jars lol:
            'binpatcher': [
                    'version': "net.minecraftforge:binarypatcher:${BINPATCH_VERSION}:fatjar",
                    'args': [ '--clean', '{clean}', '--output', '{output}', '--apply', '{patch}' ]
            ],
            'patches': 'patches/',
            'inject': 'inject/',
            'spec': SPEC_VERSION
    ]).toPrettyString()
}

jar {
    manifest {
        attributes(
                'Specification-Title': 'Vanilla User Development',
                'Specification-Vendor': 'ImpactDevelopment',
                'Specification-Version': SPEC_VERSION,
                'Implementation-Title': project.group,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'ImpactDevelopment',
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}
